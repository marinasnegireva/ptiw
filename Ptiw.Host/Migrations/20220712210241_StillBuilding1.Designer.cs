// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ptiw.Libs.EF;

#nullable disable

namespace Ptiw.Host.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20220712210241_StillBuilding1")]
    partial class StillBuilding1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ptiw.Libs.EF.Tables.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Added")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CompletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NotificationText")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)");

                    b.Property<long>("UserIdTo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Notifications", "public");
                });

            modelBuilder.Entity("Ptiw.Libs.EF.Tables.NpcpnAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Added")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AppointmentDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AppointmentDayOfWeek")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AppointmentTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(126)
                        .HasColumnType("character varying(126)");

                    b.HasKey("Id");

                    b.ToTable("NpcpnAppointments", "public");
                });

            modelBuilder.Entity("Ptiw.Libs.EF.Tables.TaskConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Added")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("BelongsToUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Config")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(126)
                        .HasColumnType("character varying(126)");

                    b.HasKey("Id");

                    b.ToTable("TaskConfigs", "public");
                });

            modelBuilder.Entity("Ptiw.Libs.EF.Tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(126)
                        .HasColumnType("character varying(126)");

                    b.HasKey("Id");

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("Ptiw.Libs.EF.Tables.UserNotificationsAggregateLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FkId")
                        .HasColumnType("integer");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(126)
                        .HasColumnType("character varying(126)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UserNotificationsAggregateLog", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
